/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    vector<int> largestValues(TreeNode* root) {
        vector<int>res;
        if(!root)return res;
        queue<TreeNode*>q1;
        q1.push(root);
        while(!q1.empty())
        {
            int n=q1.size();
            int maxi=INT_MIN;
           
            for(int i=0;i<n;i++)
            {
                 TreeNode* node=q1.front();
            q1.pop();
                maxi=max(maxi,node->val);
                 if(node->left)q1.push(node->left);
            if(node->right)q1.push(node->right);
            }
            res.push_back(maxi);
           
        }
        return res;
    }
};



tc= o(n)
sc = o(n)
