class Solution
{
    public:
    int firstoccur(int arr[],int n,int x)
    {
        int ans=-1;
        int s=0,l=n-1,mid;
        while(s<=l)
        {
            mid=s+(l-s)/2;
            if(arr[mid]==x)
            {
                ans=mid;
                l=mid-1;
            }
            else if(arr[mid]>x)
            {
                l=mid-1;
            }
            else s=mid+1;
        }
        return ans;
    }
    int lastoccur(int arr[],int n,int x)
    {
        int ans=-1;
        int s=0,l=n-1,mid;
        while(s<=l)
        {
            mid=s+(l-s)/2;
            if(arr[mid]==x)
            {
                ans=mid;
                s=mid+1;
            }
            else if(arr[mid]>x)
            {
               l=mid-1;
            }
            else s=mid+1;
        }
        return ans;
    }
    vector<int> find(int arr[], int n , int x )
    {
        int firstres=firstoccur(arr,n,x);
        int lastres=lastoccur(arr,n,x);
        return {firstres,lastres};
        
        // code here
    }
};

tc= o(logn)
sc=o(1)
