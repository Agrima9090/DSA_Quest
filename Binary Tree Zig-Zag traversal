/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    vector<vector<int>> zigzagLevelOrder(TreeNode* root) {
        vector<vector<int>>v1;
        if(!root)return v1;
        queue<TreeNode*>q1;
        q1.push(root);
        bool flag=true;
        while(!q1.empty())
        {
            int n=q1.size();
            vector<int>v2(n);
            for(int i=0;i<n;i++)
            {
                TreeNode* node=q1.front();
                q1.pop();
                int ind=flag?i:(n-i-1);
                v2[ind]=node->val;
                if(node->left)q1.push(node->left);
                if(node->right)q1.push(node->right);
            }
            flag=!flag;
            v1.push_back(v2);
        }
        return v1;
    }
};

t.c= o(n)
s.c=o(n)
